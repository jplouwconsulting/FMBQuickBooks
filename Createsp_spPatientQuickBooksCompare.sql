USE [FMBQuickBooks]
GO

/****** Object:  StoredProcedure [dbo].[spPatientQuickBooksCompare]    Script Date: 9/5/2018 4:44:11 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spPatientQuickBooksCompare]
	-- Add the parameters for the stored procedure here

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


	DECLARE @Response nvarchar(MAX)
	DECLARE @StatusCode int
	DECLARE @StatusDescription nvarchar(MAX)

	EXEC usp_QuickBooks_v3_CompanyCustomer_Query
			@Profile = 'MoahcoSandBox',	
			@Response = @Response OUTPUT, 
			@StatusCode = @StatusCode OUTPUT, 
			@StatusDescription = @StatusDescription OUTPUT

	IF @StatusCode >= 400
		EXEC SQLHTTP.net.RaiseHttpError @StatusCode, @StatusDescription, @Response
	ELSE
		BEGIN

			DECLARE @X xml
			SET @X = SQLHTTP.net.Json_To_Xml(@Response, '0')

		--	SELECT @X

			--The XPath syntax below was easily generated by executing the following commands:
			--EXEC SQLHTTP.net.XQueryHelper @X
			--and then executing: 
			--EXEC SQLHTTP.net.XQueryHelper @X, 'JsonObject/QueryResponse/Customer/JsonObject'
		
			--SELECT T.C.value(N'@Id', N'nvarchar(MAX)') AS [Id]
			--      ,T.C.value(N'@GivenName', N'nvarchar(MAX)') AS [GivenName]
			--      ,T.C.value(N'@CompanyName', N'nvarchar(MAX)') AS [CompanyName]
			--      ,T.C.value(N'@Balance', N'nvarchar(MAX)') AS [Balance]
			--FROM @X.nodes(N'/JsonObject/QueryResponse/Customer/JsonObject') T(C)

			SELECT  T.C.value(N'@Active', N'nvarchar(MAX)') AS [Active]
		   ,T.C.value(N'@Balance', N'nvarchar(MAX)') AS [Balance]
		   ,T.C.value(N'@BalanceWithJobs', N'nvarchar(MAX)') AS [BalanceWithJobs]
		   ,T.C.value(N'@BillWithParent', N'nvarchar(MAX)') AS [BillWithParent]
		   ,T.C.value(N'@DisplayName', N'nvarchar(MAX)') AS [DisplayName]
		   ,T.C.value(N'@FamilyName', N'nvarchar(MAX)') AS [FamilyName]
		   ,T.C.value(N'@FullyQualifiedName', N'nvarchar(MAX)') AS [FullyQualifiedName]
		   ,T.C.value(N'@GivenName', N'nvarchar(MAX)') AS [GivenName]
		   ,T.C.value(N'@Id', N'int') AS [QBId]
		   ,T.C.value(N'@Job', N'nvarchar(MAX)') AS [Job]
		   ,T.C.value(N'@PreferredDeliveryMethod', N'nvarchar(MAX)') AS [PreferredDeliveryMethod]
		   ,T.C.value(N'@PrintOnCheckName', N'nvarchar(MAX)') AS [PrintOnCheckName]
		   ,T.C.value(N'@SyncToken', N'nvarchar(MAX)') AS [SyncToken]
		   ,T.C.value(N'@Taxable', N'nvarchar(MAX)') AS [Taxable]
		   ,T.C.value(N'@domain', N'nvarchar(MAX)') AS [domain]
		   ,T.C.value(N'@sparse', N'nvarchar(MAX)') AS [sparse]
		   ,T.C.value(N'BillAddr[1]/@City', N'nvarchar(MAX)') AS [City]
		   ,T.C.value(N'BillAddr[1]/@Country', N'nvarchar(MAX)') AS [Country]
		   ,T.C.value(N'BillAddr[1]/@CountrySubDivisionCode', N'nvarchar(MAX)') AS [CountrySubDivisionCode]
		   ,T.C.value(N'BillAddr[1]/@Id', N'nvarchar(MAX)') AS [BillingId]
		   ,T.C.value(N'BillAddr[1]/@Lat', N'nvarchar(MAX)') AS [Lat]
		   ,T.C.value(N'BillAddr[1]/@Line1', N'nvarchar(MAX)') AS [Line1]
		   ,T.C.value(N'BillAddr[1]/@Long', N'nvarchar(MAX)') AS [Long]
		   ,T.C.value(N'BillAddr[1]/@PostalCode', N'nvarchar(MAX)') AS [PostalCode]
		   --,T.C.value(N'CurrencyRef[1]/@name', N'nvarchar(MAX)') AS [name]
		   --,T.C.value(N'CurrencyRef[1]/@value', N'nvarchar(MAX)') AS [value]
		   --,T.C.value(N'MetaData[1]/@CreateTime', N'nvarchar(MAX)') AS [CreateTime]
		   --,T.C.value(N'MetaData[1]/@LastUpdatedTime', N'nvarchar(MAX)') AS [LastUpdatedTime]
		   ,T.C.value(N'PrimaryEmailAddr[1]/@Address', N'nvarchar(MAX)') AS [EmailAddress]
		   --,T.C.value(N'PrimaryPhone[1]/@FreeFormNumber', N'nvarchar(MAX)') AS [FreeFormNumber]
		   --,T.C.value(N'ShipAddr[1]/@City', N'nvarchar(MAX)') AS [City]
		   --,T.C.value(N'ShipAddr[1]/@Country', N'nvarchar(MAX)') AS [Country]
		   --,T.C.value(N'ShipAddr[1]/@CountrySubDivisionCode', N'nvarchar(MAX)') AS [CountrySubDivisionCode]
		   --,T.C.value(N'ShipAddr[1]/@Id', N'nvarchar(MAX)') AS [ShippingId]
		   --,T.C.value(N'ShipAddr[1]/@Lat', N'nvarchar(MAX)') AS [Lat]
		   --,T.C.value(N'ShipAddr[1]/@Line1', N'nvarchar(MAX)') AS [Line1]
		   --,T.C.value(N'ShipAddr[1]/@Long', N'nvarchar(MAX)') AS [Long]
		   --,T.C.value(N'ShipAddr[1]/@PostalCode', N'nvarchar(MAX)') AS [PostalCode]
		   --,T.C.value(N'@CompanyName', N'nvarchar(MAX)') AS [CompanyName]
		   --,T.C.value(N'Fax[1]/@FreeFormNumber', N'nvarchar(MAX)') AS [FreeFormNumber]
		   --,T.C.value(N'Mobile[1]/@FreeFormNumber', N'nvarchar(MAX)') AS [FreeFormNumber]
		   --,T.C.value(N'WebAddr[1]/@URI', N'nvarchar(MAX)') AS [URI]
		   --,T.C.value(N'@Level', N'nvarchar(MAX)') AS [Level]
		   --,T.C.value(N'ParentRef[1]/@value', N'nvarchar(MAX)') AS [value]
		   --,T.C.value(N'@MiddleName', N'nvarchar(MAX)') AS [MiddleName]
		INTO #t
	FROM @X.nodes(N'/JsonObject/QueryResponse/Customer/JsonObject') T(C)
	order by T.C.value(N'@Id', N'int')

	select #t.QBID,
	'{
    "BillAddr": {
        "Line1": "123 Main Street",
        "City": "Mountain View",
        "Country": "USA",
        "CountrySubDivisionCode": "CA",
        "PostalCode": "94042"
    },
    "Notes": "Here are other details.",
    "Title": "Mr",
    "GivenName": "James",
    "MiddleName": "B",
    "FamilyName": "King",
    "Suffix": "Jr",
    "FullyQualifiedName": "King Groceries",
    "CompanyName": "King Groceries",
    "DisplayName": "Kings Groceries",
    "PrimaryPhone": {
        "FreeFormNumber": "(555) 555-5555"
    },
    "PrimaryEmailAddr": {
        "Address": "' + #t.[EmailAddress] + '"
    }
}' as [BodyToCreate]
	from #t
	WHERE NOT EXISTS (Select QBID FROM dbo.tblPatientAudit pa where pa.QBID = #t.QBID)

	END
END

GO


